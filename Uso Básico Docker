Iniciando o docker: systemctl start docker

Modo daemon: rodando via processo em background

Subindo primeiro container:
sudo docker container run hello-world

Subindo debian container:

sudo docker container run debian bash --version

explicação: 
comando run: executa a imagem
comando container: cria o container e o inicializa

docker run nome_imagem:
procura a imagem localmente, baixa a imagem caso não ache,
valida o hash da imagem, executa o container.

o bash é executado dentro da imagem debian do container 

Comando para listar todos os containers:
sudo docker ps
explicação: lista todos os containers que estão sendo executados
atributos: -a //Para listar todos os containers mesmo os inativos

Comando para remover um container:
sudo docker --rm

Comando para executar e remover um container:
sudo docker run --rm <nome_container>


Comando para executar de forma iterativa:
docker exec -it <nome_imagem/id_container> bash

Comando para dar stop no container:
docker stop <nome_imagem/id_container>

Comando para start no container:
docker start <nome_imagem/id_container>

Comando para pausar o container:
docker pause <nome_imagem/id_container>

Comando para depausar o container:
docker unpause <nome_imagem/id_container>

Comando para run de forma iterativa:
docker run -it <nome_imagem/id_container> bash

Diferencia entre exec e run:
O docker run cria um novo container e o executa.
O docker exec permite executar um comando em um container de já está em 
execução.

Comando para run sem travar shell:
docker run -d <nome_imagem/id_container>

Comando para mapear a saída para o host:
docker run -d -P <nome_imagem/id_container>

exemplo: usar imagem dockersamples/static-site

Comando para ver o mapeamento das portas:
docker port <id_container>

Comando para vermos as camadas de uma imagem:
docker images <id_images>

Comando para listar todos os containers que estão sendo executados:
docker container ps

Comando para listar todos os containers que estão/já foram executados:
docker container ps -a

Comando para pararmos todos os containers em execução:
docker stop $(docker container ls -q)

Comando para criarmos um container com um nome específico:
docker container run --name <nome_container> -it debian bash
Sendo debian a imagem e bash para entrarmos no shell da imagem.

Comando para reaproveitarmos um container já existente:
docker container start -ai <nome_imagem>
Sendo -a para travarmos o terminar e i para executarmos de forma interativa.

Comando para baixarmos a imagem do nginx e mapear a porta 8080:
docker container run -p 8080:80 nginx

Mapeando uma pasta do host para dentro do container:
Primeiramente devemos criar uma pasta com os arquivos dentro de um diretório qualquer.
Dentro desse diretório utilizamos o comando:
docker container run -p 8080:80 -v $(pwd)/html:/usr/share/nginx/html nginx

sendo que -p é para mapear a porta, sendo 8080 a porta do host. 
-v é para criarmos os volumes.







